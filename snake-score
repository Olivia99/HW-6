var SNAKE_BLOCK_SIZE = 20;
var snakeHead = {
  x: 100,
  y: 100
}
var snakeSegments = [];

var snakeDirection = "right"; // or "down", etc.

var foodLocation = {
  x: 200,
  y: 200
}

var score={
	p: 0,
	s: "score:"
}


function setup() {
  createCanvas(400, 400);
  frameRate(2);
  
  // add 2 segments
  extendSnake();
  extendSnake();
  
  background(0);
  drawSegment(snakeHead);
}

function draw() {
  background(0);

  moveSnake();
  checkFoodReached();

  // draw snake head
  drawSegment(snakeHead);
	
	
    
  // draw snake body
  snakeSegments.forEach(drawSegment);
	
  
  // draw food location
  ellipse(foodLocation.x, foodLocation.y, SNAKE_BLOCK_SIZE, SNAKE_BLOCK_SIZE);
	 text(score.s+ score.p,10,10);
	checkboundary();
	dead();
}


function drawSegment(segment) {
  noStroke();
  fill(255);
  rectMode(CENTER);
  rect(segment.x, segment.y, SNAKE_BLOCK_SIZE, SNAKE_BLOCK_SIZE);
	segment.x=constrain(segment.x, 0, width-20);
	segment.y=constrain(segment.y,0, height-20);
}

function moveSnake() {
  // add snakeHead to front of segments array
  snakeSegments.unshift({x: snakeHead.x, y: snakeHead.y});
  // remove last element of the segments array
  snakeSegments.pop();
  
  if (snakeDirection == "up") {
    snakeHead.y = snakeHead.y - SNAKE_BLOCK_SIZE;
  } else if (snakeDirection == "down") {
    snakeHead.y = snakeHead.y + SNAKE_BLOCK_SIZE;
  } else if (snakeDirection == "left") {
    snakeHead.x = snakeHead.x - SNAKE_BLOCK_SIZE;
  } else if (snakeDirection == "right") {
    snakeHead.x = snakeHead.x + SNAKE_BLOCK_SIZE;
  }
}

function keyPressed() {
  if (keyCode == UP_ARROW) {
    snakeDirection = "up";
  } else if (keyCode == DOWN_ARROW) {
    snakeDirection = "down";
  } else if (keyCode == RIGHT_ARROW) {
    snakeDirection = "right";
  } else if (keyCode == LEFT_ARROW) {
    snakeDirection = "left";
  }
}

function extendSnake() {
  // get the last segment -- or the head segment if there aren't any segments
  var lastSegment = snakeSegments[snakeSegments.length-1] || snakeHead;
  // duplicate last segment
  snakeSegments.push({x: lastSegment.x, y: lastSegment.y}); 

}


function checkFoodReached() {
	var fx=floor(width / SNAKE_BLOCK_SIZE);
	var fy=floor(width / SNAKE_BLOCK_SIZE);
  if (dist(snakeHead.x, snakeHead.y, foodLocation.x, foodLocation.y) == 0) {
    foodLocation.x = SNAKE_BLOCK_SIZE * floor(random(1,fx));
    foodLocation.y = SNAKE_BLOCK_SIZE * floor(random(1,fy));
    	score.p=score.p+1;
	print(score.p);
    // make the snake longer!
    extendSnake();
		print(foodLocation.x);
		print(foodLocation.y);
		
  }
}

function dead(){
	for (var i=0; i<snakeSegments.length; i++){
		var d=dist(snakeSegments[i].x,snakeSegments[i].y,snakeHead.x,snakeHead.y);
		if(d<1){
			noLoop();
			textSize(40);
			textAlign(CENTER);
			fill(200,0,0);
			text("GAME OVER!",width/2,height/2);	
			textSize(20);
			text("Click to Start Over", width/2, height/2+30);
		}
	}
}

function checkboundary(){
	for (var i=0; i<snakeSegments.length; i++){
		var d=dist(snakeSegments[i].x,snakeSegments[i].y,0,random(0,height));
		if(d=0){
			noLoop();
			textSize(40);
			textAlign(CENTER);
			fill(200,0,0);
			text("GAME OVER!",width/2,height/2);	
			textSize(20);
			text("Click to Start Over", width/2, height/2+30);
		}
		var d2=dist(snakeSegments[i].x,snakeSegments[i].y,random(0,width),0);
		if(d=0){
			noLoop();
			textSize(40);
			textAlign(CENTER);
			fill(200,0,0);
			text("GAME OVER!",width/2,height/2);
			textSize(20);
			text("Click to Start Over", width/2, height/2-50);
		}
	}
}

// function mouseClicked(){
// 	startOver();
// }
// function startOver(){
//   background(0);
// 	 drawSegment(snakeHead);
// 	 extendSnake();
//   extendSnake();
// }

